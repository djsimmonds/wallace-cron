#!/bin/bash

# written: 20130312
# last updated: 20130508
# CHANGELOG
  # 20130508
    # volumes and scanID now in parent script, so that process functions can be used for all tasks

set -e # stop if any error occurs
set -x # print out progress on the script

. ${FSLDIR}/etc/fslconf/fsl.sh # prevents error from occurring when trying to run BET

#volumes=31 # number of dicoms
#scanID="dti_30dirs_68slices_1152x1152"

# initial variables
scriptName=processDTI_COG
tempStatus=$dirProcess/$id/$date/.${scan}_temp
exitStatus=error
exitText="script exited early"

# if script exits with error, create appropriate status file and clean up
function cleanup {
  echo "$session $id $date $scan $exitText" | tee -a $tempStatus
  date "+%F %H:%M:%S" | tee -a $tempStatus # time stamp of script end
  ls -ahl $dirProcess/$id/$date/$scan 2>/dev/null | tee -a $tempStatus # print analysis folder contents to status file, if present
  set | tee -a $tempStatus # print out shell/environment variables
  mv $tempStatus $dirProcess/$id/$date/.${scan}_${exitStatus} # renames status file appropriately
  scp $dirProcess/$id/$date/.${scan}_${exitStatus} $ipCopy:/$dirCopy/$id/$date/ # copies status file to dirCopy
  rm -rf $dirProcess/$id/$date/$scan # remove analysis files
}

# create temp status file, version and time stamp
date "+%F %H:%M:%S" | tee $tempStatus
echo $scriptName | tee -a $tempStatus
grep "last updated" $dirScripts/$scriptName | tee -a $tempStatus
echo $session $id $date $scan | tee -a $tempStatus

# set trap to run when script exits
trap cleanup EXIT

# delete any old analysis in dirProcess and dirCopy for this scan (due to cleanup, should be no files in dirProcess; however, including command to be safe)
rm -f $dirProcess/$id/$date/.${scan}_{complete,error,missing,skip}
ssh $ipCopy rm -f $dirCopy/$id/$date/.${scan}_{complete,error,missing,skip}
rm -rf $dirProcess/$id/$date/$scan
ssh $ipCopy rm -rf $dirCopy/$id/$date/$scan

# location of raw data
cd $dirSource

# if multiple scans found
if [ $( echo $scanDir | wc -w ) -gt 1 ]; then
  echo "more than one file found. checking to see which is the correct length..." | tee -a $tempStatus
  matchScan=""
  for d in $scanDir; do
    dicoms=$( ls $d/*.dcm | wc -w )
    if [ $dicoms -eq $volumes ]; then
      if [ -z $matchScan ]; then
        echo "found scan with $volumes volumes: $d" | tee -a $tempStatus
      else
        echo "multiple scans with $volumes volumes found: using later $d instead of $matchScan" | tee -a $tempStatus
      fi
      matchScan=$d
    else
      echo "scan length of $dicoms volumes is incorrect: $d" | tee -a $tempStatus
    fi
  done
  scanDir=$matchScan
  if [ -z $scanDir ]; then
    echo "no scans had correct number of volumes" | tee -a $tempStatus
    exit 1
  fi
# if no scan found
elif [ ! -d $scanDir ]; then
  echo "no scan found for $scan" | tee -a $tempStatus
  exitStatus=missing
  exit 1
else
  dicoms=$( ls $scanDir/*.dcm | wc -w )
  if [ $dicoms -eq $volumes ]; then
    echo "found scan with $volumes volumes: $scanDir" | tee -a $tempStatus
  else
    echo "scan length of $dicoms volumes is incorrect: $scanDir" | tee -a $tempStatus
    exit 1
  fi  
fi

# copy files to processing directory
mkdir -p $dirProcess/$id/$date/$scan
rsync -avz $dirSource/$scanDir/*.dcm $dirProcess/$id/$date/$scan/

# run preprocessing
cd $dirProcess/$id/$date/$scan
dcm2nii *.dcm
mv *.nii.gz ${id}_${date}_raw.nii.gz
mv *.bvec ${id}_${date}.bvec
mv *.bval ${id}_${date}.bval
bet ${id}_${date}_raw ${id}_${date}_brain.nii.gz -f 0.3 -m # brain extraction
eddy_correct ${id}_${date}_raw.nii.gz ${id}_${date}_eddy.nii.gz 0 # correct for eddy current distortion and motion
dtifit --data=${id}_${date}_eddy.nii.gz --out=${id}_${date} --mask=${id}_${date}_brain_mask.nii.gz --bvecs=${id}_${date}.bvec --bvals=${id}_${date}.bval # fit tensors
fslmaths ${id}_${date}_L2.nii.gz -add ${id}_${date}_L3.nii.gz -div 2 ${id}_${date}_RD.nii.gz # calculate RD since it's not done automatically

# error if processing not finished (preprocessed functionals not present or motion analysis didn't run)
if [ ! -e "${id}_${date}_RD.nii.gz" ]; then
  echo "ERROR: preprocessing not completed for $session $id $date $scan" | tee -a $tempStatus
  exit 1
fi

# copy files to dirCopy and cleanup dirProcess
rsync -avz $dirProcess/$id/$date/$scan ${ipCopy}:${dirCopy}/$id/$date/
exitStatus="complete"
exitText="complete"
